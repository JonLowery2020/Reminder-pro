{"version":3,"sources":["constants.js","components/App.jsx","actions/index.js","reducers/index.js","index.js"],"names":["ADD_REMINDER","DELETE_REMINDER","CLEAR_REMINDERS","App","props","state","text","dueDate","console","log","this","addReminder","id","deleteReminder","reminders","className","map","reminder","moment","Date","fromNow","onClick","placeholder","onChange","event","setState","target","value","type","renderReminders","clearReminders","Component","connect","action","Math","random","removeById","filter","read_cookie","bake_cookie","store","createStore","reducer","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3275a6c.chunk.js","sourcesContent":["export const ADD_REMINDER = 'ADD_REMINDER';\nexport const DELETE_REMINDER= 'DELETE_REMINDER';\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {addReminder, deleteReminder, clearReminders} from '../actions';\nimport moment from 'moment';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      dueDate: ''\n    }\n  }\n\n  addReminder() {\n    console.log('this.state.dueDate', this.state.dueDate)\n    this.props.addReminder(this.state.text, this.state.dueDate);\n  }\n\n  deleteReminder(id){\n    console.log('deleting in app', id);\n    console.log('this.prop', this.props);\n    this.props.deleteReminder(id);\n  }\n\n  renderReminders(){\n    const { reminders } = this.props;\n    return (\n      <ul className ='list-group col-sm-4'>\n      {\n        reminders.map(reminder =>{\n          return (\n            <li key= {reminder.id} className =\"list-group-item\">\n             <div className =\"list-item\">\n                <div>{reminder.text}</div>\n                <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\n             </div>\n\n             <div className =\"list item delete-button\"\n             onClick= {()=> this.deleteReminder(reminder.id)}\n             >\n               &#x2715;\n\n             </div>\n            </li>\n          )\n        })\n      }\n      </ul>\n    )\n  }\n\n\n  render() {\n    return (\n      <div className='App'>\n       <div className= 'title'>\n       RemindMe\n       </div>\n       <div className = 'form-inline reminder-form' >\n        <div className = 'form-group'>\n         <input\n         className= \"form-control\"\n         placeholder=\"I have to...\"\n         onChange = {event => this.setState({text: event.target.value})}\n         />\n         <input\n         className =\"form-control\"\n         type= \"datetime-local\"\n         onChange={event => this.setState({dueDate: event.target.value})}\n         />\n        </div>\n\n       </div>\n       <button\n       type = \"button\"\n       className=\"btn btn-success\"\n       onClick = {() => this.addReminder()}\n       >\n       Add Reminder\n       </button>\n       {this.renderReminders() }\n       <div\n\n       className= 'btn btn-danger'\n       onClick= {()=> this.props.clearReminders()}\n       >\n         Clear All\n       </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n\n  return{\n    reminders: state\n  }\n}\n\n\nexport default connect(mapStateToProps,{addReminder, deleteReminder, clearReminders})(App);\n","import {ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS} from '../constants';\n\n\nexport const addReminder = (text, dueDate) =>{\n  const action = {\n    type: ADD_REMINDER,\n    text: text,\n    dueDate:dueDate\n  }\n  console.log('action in addReminder',action);\n  return action;\n}\n\nexport const deleteReminder = (id) => {\n  const action = {\n    type: DELETE_REMINDER,\n    id:id\n\n  }\n  console.log ('deleting actions', action);\n  return action\n\n}\n\nexport const clearReminders = () =>{\n  return {\n    type: CLEAR_REMINDERS,\n  }\n}\n","import {ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS} from '../constants';\nimport {bake_cookie, read_cookie} from 'sfcookies';\n\nconst reminder = (action) => {\n  let {text, dueDate}= action;\n return {\n\n  id: Math.random(),\n  text,\n  dueDate\n\n  }\n}\nconst removeById = (state = [], id) => {\n  const reminders = state.filter(reminder => reminder.id !== id);\n  console.log('new reduced reminders', reminders);\n  return reminders;\n}\n\nconst reminders = (state = [], action) =>{\n  let reminders = null;\n  state = read_cookie('reminders');\n  switch(action.type) {\n    case ADD_REMINDER:\n      reminders = [...state, reminder(action)];\n      bake_cookie('reminders', reminders);\n      return reminders;\n    case DELETE_REMINDER:\n      reminders = removeById(state, action.id);\n      bake_cookie('reminders', reminders);\n      return reminders;\n    case CLEAR_REMINDERS:\n      reminders= [];\n      bake_cookie('reminders',reminders);\n      return reminders;\n    default:\n      return state;\n\n\n\n  }\n\n}\n\nexport default reminders;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers'\nimport './index.css'\n\nconst store = createStore(reducer);\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}